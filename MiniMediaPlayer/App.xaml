<Application
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	x:Class="MiniMediaPlayer.App"
	StartupUri="MainWindow.xaml">
	<Application.Resources>
		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary Source="Simple Styles.xaml"/>
			</ResourceDictionary.MergedDictionaries>
			<!-- 应该在此定义应用程序级的资源。-->
			<Style x:Key="BtnCostume" TargetType="{x:Type Button}">
				<Style.Resources>
					<Storyboard x:Key="OnMouseEnter1">
						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="{x:Null}">
							<EasingDoubleKeyFrame KeyTime="0" Value="1">
								<EasingDoubleKeyFrame.EasingFunction>
									<ElasticEase EasingMode="EaseOut"/>
								</EasingDoubleKeyFrame.EasingFunction>
							</EasingDoubleKeyFrame>
							<EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="1.5">
								<EasingDoubleKeyFrame.EasingFunction>
									<ElasticEase EasingMode="EaseOut"/>
								</EasingDoubleKeyFrame.EasingFunction>
							</EasingDoubleKeyFrame>
						</DoubleAnimationUsingKeyFrames>
						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="{x:Null}">
							<EasingDoubleKeyFrame KeyTime="0" Value="1">
								<EasingDoubleKeyFrame.EasingFunction>
									<ElasticEase EasingMode="EaseOut"/>
								</EasingDoubleKeyFrame.EasingFunction>
							</EasingDoubleKeyFrame>
							<EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="1.5">
								<EasingDoubleKeyFrame.EasingFunction>
									<ElasticEase EasingMode="EaseOut"/>
								</EasingDoubleKeyFrame.EasingFunction>
							</EasingDoubleKeyFrame>
						</DoubleAnimationUsingKeyFrames>
					</Storyboard>
					<Storyboard x:Key="OnMouseLeave1">
						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="{x:Null}">
							<EasingDoubleKeyFrame KeyTime="0" Value="1.5">
								<EasingDoubleKeyFrame.EasingFunction>
									<ElasticEase EasingMode="EaseOut"/>
								</EasingDoubleKeyFrame.EasingFunction>
							</EasingDoubleKeyFrame>
							<EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="1">
								<EasingDoubleKeyFrame.EasingFunction>
									<ElasticEase EasingMode="EaseOut"/>
								</EasingDoubleKeyFrame.EasingFunction>
							</EasingDoubleKeyFrame>
						</DoubleAnimationUsingKeyFrames>
						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="{x:Null}">
							<EasingDoubleKeyFrame KeyTime="0" Value="1.5">
								<EasingDoubleKeyFrame.EasingFunction>
									<ElasticEase EasingMode="EaseOut"/>
								</EasingDoubleKeyFrame.EasingFunction>
							</EasingDoubleKeyFrame>
							<EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="1">
								<EasingDoubleKeyFrame.EasingFunction>
									<ElasticEase EasingMode="EaseOut"/>
								</EasingDoubleKeyFrame.EasingFunction>
							</EasingDoubleKeyFrame>
						</DoubleAnimationUsingKeyFrames>
					</Storyboard>
				</Style.Resources>
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type Button}">
							<Grid x:Name="grid">
								<VisualStateManager.VisualStateGroups>
									<VisualStateGroup x:Name="CommonStates">
										<VisualStateGroup.Transitions>
											<VisualTransition GeneratedDuration="0" To="MouseOver">
												<Storyboard RepeatBehavior="Forever" AutoReverse="False">
													<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="rectangle">
														<EasingColorKeyFrame KeyTime="0" Value="Black">
															<EasingColorKeyFrame.EasingFunction>
																<CubicEase EasingMode="EaseOut"/>
															</EasingColorKeyFrame.EasingFunction>
														</EasingColorKeyFrame>
														<EasingColorKeyFrame KeyTime="0:0:1.5" Value="White">
															<EasingColorKeyFrame.EasingFunction>
																<CubicEase EasingMode="EaseOut"/>
															</EasingColorKeyFrame.EasingFunction>
														</EasingColorKeyFrame>
														<EasingColorKeyFrame KeyTime="0:0:3" Value="Black">
															<EasingColorKeyFrame.EasingFunction>
																<CubicEase EasingMode="EaseOut"/>
															</EasingColorKeyFrame.EasingFunction>
														</EasingColorKeyFrame>
													</ColorAnimationUsingKeyFrames>
												</Storyboard>
											</VisualTransition>
										</VisualStateGroup.Transitions>
										<VisualState x:Name="Normal"/>
										<VisualState x:Name="MouseOver"/>
										<VisualState x:Name="Pressed"/>
										<VisualState x:Name="Disabled"/>
									</VisualStateGroup>
								</VisualStateManager.VisualStateGroups>
								<Rectangle x:Name="rectangle" RadiusY="7.5" RadiusX="7.5" Stroke="{x:Null}">
									<Rectangle.Fill>
										<LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
											<GradientStop Color="Black"/>
											<GradientStop Color="#FF0564FA" Offset="1"/>
										</LinearGradientBrush>
									</Rectangle.Fill>
								</Rectangle>
								<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
							</Grid>
							<ControlTemplate.Triggers>
								<Trigger Property="IsFocused" Value="True"/>
								<Trigger Property="IsDefaulted" Value="True"/>
								<Trigger Property="IsMouseOver" Value="True"/>
								<Trigger Property="IsPressed" Value="True"/>
								<Trigger Property="IsEnabled" Value="False"/>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
				<Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
				<Setter Property="RenderTransform">
					<Setter.Value>
						<TransformGroup>
							<ScaleTransform/>
							<SkewTransform/>
							<RotateTransform/>
							<TranslateTransform/>
						</TransformGroup>
					</Setter.Value>
				</Setter>
				<Style.Triggers>
					<EventTrigger RoutedEvent="Mouse.MouseLeave">
						<BeginStoryboard x:Name="OnMouseLeave1_BeginStoryboard" Storyboard="{StaticResource OnMouseLeave1}"/>
					</EventTrigger>
					<EventTrigger RoutedEvent="Mouse.MouseEnter">
						<BeginStoryboard Storyboard="{StaticResource OnMouseEnter1}"/>
					</EventTrigger>
				</Style.Triggers>
			</Style>
			<Style x:Key="BtnCustome2" TargetType="{x:Type Button}">
				<Style.Resources>
					<Storyboard x:Key="OnMouseEnter1">
						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="{x:Null}">
							<EasingDoubleKeyFrame KeyTime="0" Value="1">
								<EasingDoubleKeyFrame.EasingFunction>
									<ElasticEase EasingMode="EaseOut"/>
								</EasingDoubleKeyFrame.EasingFunction>
							</EasingDoubleKeyFrame>
							<EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="1.5">
								<EasingDoubleKeyFrame.EasingFunction>
									<ElasticEase EasingMode="EaseOut"/>
								</EasingDoubleKeyFrame.EasingFunction>
							</EasingDoubleKeyFrame>
						</DoubleAnimationUsingKeyFrames>
						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="{x:Null}">
							<EasingDoubleKeyFrame KeyTime="0" Value="1">
								<EasingDoubleKeyFrame.EasingFunction>
									<ElasticEase EasingMode="EaseOut"/>
								</EasingDoubleKeyFrame.EasingFunction>
							</EasingDoubleKeyFrame>
							<EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="1.5">
								<EasingDoubleKeyFrame.EasingFunction>
									<ElasticEase EasingMode="EaseOut"/>
								</EasingDoubleKeyFrame.EasingFunction>
							</EasingDoubleKeyFrame>
						</DoubleAnimationUsingKeyFrames>
					</Storyboard>
					<Storyboard x:Key="OnMouseLeave1">
						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="{x:Null}">
							<EasingDoubleKeyFrame KeyTime="0" Value="1.5">
								<EasingDoubleKeyFrame.EasingFunction>
									<ElasticEase EasingMode="EaseOut"/>
								</EasingDoubleKeyFrame.EasingFunction>
							</EasingDoubleKeyFrame>
							<EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="1">
								<EasingDoubleKeyFrame.EasingFunction>
									<ElasticEase EasingMode="EaseOut"/>
								</EasingDoubleKeyFrame.EasingFunction>
							</EasingDoubleKeyFrame>
						</DoubleAnimationUsingKeyFrames>
						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="{x:Null}">
							<EasingDoubleKeyFrame KeyTime="0" Value="1.5">
								<EasingDoubleKeyFrame.EasingFunction>
									<ElasticEase EasingMode="EaseOut"/>
								</EasingDoubleKeyFrame.EasingFunction>
							</EasingDoubleKeyFrame>
							<EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="1">
								<EasingDoubleKeyFrame.EasingFunction>
									<ElasticEase EasingMode="EaseOut"/>
								</EasingDoubleKeyFrame.EasingFunction>
							</EasingDoubleKeyFrame>
						</DoubleAnimationUsingKeyFrames>
					</Storyboard>
				</Style.Resources>
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type Button}">
							<Grid>
								<VisualStateManager.VisualStateGroups>
									<VisualStateGroup x:Name="CommonStates">
										<VisualStateGroup.Transitions>
											<VisualTransition GeneratedDuration="0" To="MouseOver">
												<Storyboard RepeatBehavior="Forever">
													<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="ellipse">
														<EasingColorKeyFrame KeyTime="0" Value="Black">
															<EasingColorKeyFrame.EasingFunction>
																<CubicEase EasingMode="EaseOut"/>
															</EasingColorKeyFrame.EasingFunction>
														</EasingColorKeyFrame>
														<EasingColorKeyFrame KeyTime="0:0:1.5" Value="White">
															<EasingColorKeyFrame.EasingFunction>
																<CubicEase EasingMode="EaseOut"/>
															</EasingColorKeyFrame.EasingFunction>
														</EasingColorKeyFrame>
														<EasingColorKeyFrame KeyTime="0:0:3" Value="Black">
															<EasingColorKeyFrame.EasingFunction>
																<CubicEase EasingMode="EaseOut"/>
															</EasingColorKeyFrame.EasingFunction>
														</EasingColorKeyFrame>
													</ColorAnimationUsingKeyFrames>
												</Storyboard>
											</VisualTransition>
										</VisualStateGroup.Transitions>
										<VisualState x:Name="Normal"/>
										<VisualState x:Name="MouseOver"/>
										<VisualState x:Name="Pressed"/>
										<VisualState x:Name="Disabled"/>
									</VisualStateGroup>
								</VisualStateManager.VisualStateGroups>
								<Ellipse x:Name="ellipse">
									<Ellipse.Fill>
										<LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
											<GradientStop Color="Black"/>
											<GradientStop Color="#FF0564FA" Offset="1"/>
										</LinearGradientBrush>
									</Ellipse.Fill>
								</Ellipse>
								<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
							</Grid>
							<ControlTemplate.Triggers>
								<EventTrigger RoutedEvent="FrameworkElement.Loaded" SourceName="ellipse"/>
								<Trigger Property="IsFocused" Value="True"/>
								<Trigger Property="IsDefaulted" Value="True"/>
								<Trigger Property="IsMouseOver" Value="True"/>
								<Trigger Property="IsPressed" Value="True"/>
								<Trigger Property="IsEnabled" Value="False"/>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
				<Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
				<Setter Property="RenderTransform">
					<Setter.Value>
						<TransformGroup>
							<ScaleTransform/>
							<SkewTransform/>
							<RotateTransform/>
							<TranslateTransform/>
						</TransformGroup>
					</Setter.Value>
				</Setter>
				<Style.Triggers>
					<EventTrigger RoutedEvent="Mouse.MouseEnter">
						<BeginStoryboard Storyboard="{StaticResource OnMouseEnter1}"/>
					</EventTrigger>
					<EventTrigger RoutedEvent="Mouse.MouseLeave">
						<BeginStoryboard x:Name="OnMouseLeave1_BeginStoryboard" Storyboard="{StaticResource OnMouseLeave1}"/>
					</EventTrigger>
				</Style.Triggers>
			</Style>
		</ResourceDictionary>
	</Application.Resources>
</Application>